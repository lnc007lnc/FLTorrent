# Raspberry Pi device simulation image
# ARM architecture optimization, medium resources

FROM python:3.9-slim

LABEL device.type="raspberry_pi"
LABEL device.capability="medium"
LABEL device.gpu.support="false"
LABEL architecture="arm64v8"

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Install system dependencies (simulating ARM environment)
RUN apt-get update && apt-get install -y \
    # ARM optimization tools
    gcc \
    g++ \
    make \
    # Network tools
    iproute2 \
    net-tools \
    iputils-ping \
    # System tools
    curl \
    wget \
    git \
    # Math library optimization
    libblas3 \
    liblapack3 \
    libatlas-base-dev \
    # GPIO and hardware interface libraries (simulated)
    gpiod \
    # Clean cache
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install Raspberry Pi optimized Python packages
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir \
    torch==2.1.0+cpu \
    torchvision==0.16.0+cpu \
    --index-url https://download.pytorch.org/whl/cpu

# Install commonly used Raspberry Pi libraries
RUN pip install --no-cache-dir \
    numpy \
    pandas \
    scipy \
    matplotlib \
    # Raspberry Pi GPIO simulation
    gpiozero \
    # Sensor libraries
    adafruit-circuitpython-dht \
    # Network optimization
    requests[socks]

# Copy FederatedScope code
COPY . /app/

# Set permissions
RUN chmod +x /app/federatedscope/main.py

# Set device-specific environment variables
ENV DEVICE_TYPE="raspberry_pi"
ENV GPU_AVAILABLE="false"
ENV MEMORY_LIMIT="4096"  # 4GB (Pi 4)
ENV CPU_CORES="4"
ENV NETWORK_TYPE="WiFi/Ethernet"
ENV ARM_COMPUTE_LIBRARY="1"

# ARM optimization settings
ENV OPENBLAS_NUM_THREADS="4"
ENV TORCH_NUM_THREADS="4"
ENV OMP_NUM_THREADS="4"

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/output /app/configs /app/gpio

# Health check
HEALTHCHECK --interval=45s --timeout=15s --start-period=10s --retries=3 \
    CMD python -c "import torch; print('Raspberry Pi ready')" || exit 1

# Entry command
CMD ["python", "/app/federatedscope/main.py"]