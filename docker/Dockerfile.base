# FederatedScope base Docker image
# For edge device federated learning simulation

FROM ubuntu:20.04

# Maintainer information
LABEL maintainer="FederatedScope Edge Simulation"
LABEL description="Base image for FederatedScope edge device simulation"

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Install basic system packages and Python 3.10 (matching host version)
RUN apt-get update && apt-get install -y \
    # Basic system packages
    software-properties-common \
    ca-certificates \
    gnupg \
    lsb-release \
    wget \
    curl \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update && apt-get install -y \
    python3.10 \
    python3.10-dev \
    python3.10-distutils \
    python3.10-venv \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.10 as default python
RUN ln -sf /usr/bin/python3.10 /usr/bin/python \
    && ln -sf /usr/bin/python3.10 /usr/bin/python3

# Install latest pip (avoid old version compatibility issues)
RUN python -m ensurepip --upgrade \
    && python -m pip install --upgrade pip setuptools wheel

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Network tools (for tc network limiting)
    iproute2 \
    net-tools \
    iputils-ping \
    iptables \
    # System tools
    curl \
    wget \
    git \
    build-essential \
    # Clean cache
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Python dependency installation (pip upgraded above)

# Install basic Python dependencies (matching host environment versions)
RUN pip install --no-cache-dir \
    # Core dependency packages (matching host versions)
    numpy==1.26.4 \
    scikit-learn==1.5.1 \
    scipy==1.15.3 \
    pandas==2.3.0 \
    # Network libraries (matching host versions)
    requests==2.32.3 \
    urllib3==2.5.0 \
    # System tools
    setuptools==78.1.1 \
    PyYAML==6.0.2 \
    psutil==7.0.0 \
    pympler==1.1 \
    # ML tools
    tensorboard==2.19.0 \
    # Ray (matching host version)
    ray[default]==2.47.1 \
    # gRPC related (for distributed communication)
    grpcio \
    grpcio-tools \
    protobuf

# Install latest PyTorch (supporting RTX 5090 sm_120 architecture)
RUN pip install --no-cache-dir --pre \
    torch \
    torchvision \
    torchaudio \
    --index-url https://download.pytorch.org/whl/nightly/cu129

# Copy FederatedScope code
COPY . /app/

# Set permissions
RUN chmod +x /app/federatedscope/main.py

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/output /app/configs

# Default command
CMD ["python", "/app/federatedscope/main.py", "--help"]