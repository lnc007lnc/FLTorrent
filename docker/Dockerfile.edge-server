# 边缘服务器仿真镜像
# 高性能，多GPU支持

FROM nvidia/cuda:11.8-devel-ubuntu22.04

LABEL device.type="edge_server"
LABEL device.capability="high"
LABEL device.gpu.support="true"
LABEL gpu.architecture="cuda"

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    # Python环境
    python3 \
    python3-pip \
    python3-dev \
    # 编译工具
    gcc \
    g++ \
    make \
    cmake \
    # 网络工具
    iproute2 \
    net-tools \
    iputils-ping \
    iptables \
    # 系统工具
    curl \
    wget \
    git \
    htop \
    # CUDA开发工具
    nvidia-cuda-toolkit \
    # 高性能计算库
    libblas-dev \
    liblapack-dev \
    libopenmpi-dev \
    # 清理缓存
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 设置Python3为默认
RUN ln -s /usr/bin/python3 /usr/bin/python

# 升级pip
RUN python -m pip install --no-cache-dir --upgrade pip

# 安装高性能PyTorch (CUDA支持)
RUN pip install --no-cache-dir \
    torch==2.1.0+cu118 \
    torchvision==0.16.0+cu118 \
    torchaudio==2.1.0+cu118 \
    --index-url https://download.pytorch.org/whl/cu118

# 安装服务器级AI库
RUN pip install --no-cache-dir \
    # 深度学习框架
    transformers \
    accelerate \
    # 分布式训练
    torch-distributed \
    # 数据处理
    numpy \
    pandas \
    scipy \
    scikit-learn \
    # 可视化
    matplotlib \
    seaborn \
    plotly \
    # 网络优化
    requests[socks] \
    # 监控工具
    psutil \
    gpustat

# 复制FederatedScope代码
COPY . /app/

# 设置权限
RUN chmod +x /app/federatedscope/main.py

# 设置设备特定环境变量
ENV DEVICE_TYPE="edge_server"
ENV GPU_AVAILABLE="true"
ENV MEMORY_LIMIT="32768"  # 32GB
ENV CPU_CORES="16"
ENV NETWORK_TYPE="Gigabit_Ethernet"

# CUDA优化设置
ENV CUDA_VISIBLE_DEVICES="0,1,2,3"
ENV TORCH_CUDA_ARCH_LIST="7.0 7.5 8.0 8.6 8.9 9.0"
ENV NCCL_SOCKET_IFNAME="eth0"

# 性能优化
ENV TORCH_NUM_THREADS="16"
ENV OMP_NUM_THREADS="16"
ENV MKL_NUM_THREADS="16"
ENV CUDA_LAUNCH_BLOCKING="0"

# 创建必要目录
RUN mkdir -p /app/data /app/logs /app/output /app/configs /app/models /app/checkpoints

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import torch; print('GPUs:', torch.cuda.device_count()); assert torch.cuda.is_available()" || exit 1

# 入口命令
CMD ["python", "/app/federatedscope/main.py"]